// Use DBML to define your database structure
// Docs: https://dbml.dbdiagram.io/docs

Table customers {
  customer_id integer [primary key]
  first_name varchar(50) [not null]
  last_name varchar(50) [not null]
  password varchar(100) [not null]
  address varchar(200) [not null]
  registration_date date [not null]
}

Table emails {
  email_id int [primary key]
  customer_id int [not null]
  email_address varchar(100) [not null]
  type varchar(50) [not null]
}

Table phone_numbers {
  phone_number_id int [primary key]
  customer_id int [not null]
  picker_id int [not null]
  phone_number varchar(10) [not null]
  type varchar(50) [not null]
}

Table credit_cards {
  credit_card_id int [primary key]
  customer_id int [not null]
  payment_id int [not null]
  card_number varchar(16) [not null]
  cardholder_name varchar(50) [not null]
  exp_date date [not null]
  cvv varchar(4) [not null]
}

Table pickers {
  picker_id int [primary key]
  first_name varchar(50) [not null]
  last_name varchar(50) [not null]
  hire_date date [not null]
}

Table pickers_orders {
  id int [primary key]
  order_id int [not null]
  picker_id int [not null]
}

Table payments {
  payment_id int [primary key]
  customer_id int [not null]
  credit_card_id int [not null]
  order_id int [not null]
  amount decimal(8,2) [not null]
  status varchar(50) [not null]
  payment_date date [not null]
  type varchar(50) [not null]
}


Table orders {
  order_id int [primary key]
  customer_id int [not null]
  payment_id int [not null]
  order_date date [not null]
  order_status varchar(50) [not null]
  comment varchar(250)
}


Table products {
  product_id int [primary key]
  product_name varchar(100) [not null]
  producer varchar(100) [not null]
  category int [not null]
  is_by_weight binary [not null]
  price decimal(8,2) [not null]
  stock int [not null]
  description text
}

Table order_details {
  id int [primary key]
  order_id int [not null]
  product_id int [not null]
  quantity int [not null]
  weight decimal(8,2) [not null]
  total_price decimal(8,2) [not null]
}


Ref: customers.customer_id < credit_cards.credit_card_id // many-to-one

Ref: customers.customer_id < phone_numbers.phone_number_id

Ref: customers.customer_id < orders.order_id

Ref: customers.customer_id < payments.payment_id

Ref: payments.payment_id - orders.order_id

Ref: credit_cards.credit_card_id - payments.payment_id

Ref: orders.order_id < pickers_orders.id

Ref: pickers.picker_id < pickers_orders.id

Ref: products.product_id < order_details.id

Ref: orders.order_id < order_details.id

Ref: customers.customer_id < emails.email_id

// Ref: pickers.picker_id < phone_numbers.phone_number_id

