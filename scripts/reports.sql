--1
--sales summary
--What are the total sales for a specific period?
--The report provides a summary of total sales for the specified period of time (days), including the total number of orders, average order value, and revenue.
exec s24240370.get_sales_summary_ProfG_FP --accepts one parameter - number of days for report, default 30
go

--2
--Top Selling Products
--What are the top number of selling products? 
--The report provides the specified number of selling products based on the quantity sold. The report includes product names, quantities, and total sales value.
select p.product_id, p.product_name, sum(isnull (op.quantity, 0)) as quantity_sold, sum(isnull(op.total_price, 0)) as total_sales_value 
from s24240370.order_product_details_ProfG_FP op
join s24240370.products_ProfG_FP p
on op.product_id = p.product_id
group by p.product_id, product_name
order by quantity_sold desc
go

--3
--Order Frequency
--How often does a specific customer place an order?
--The report lists information on the number of orders placed by a specific customer each month.
--select c.customer_id, c.first_name + ' ' + c.last_name as full_name,  DATEPART(MONTH, order_date) as month, COUNT(o.order_id) as num_orders
declare @cust_id int = 3
exec s24240370.get_order_frequency_ProfG_FP @cust_id --accept 1 required parameter, customer it, no default 

go

--4
--Customer Preferences
--What are the most frequently purchased products by a specific customer?
--The report lists the products that were purchased the most frequently by a particular customer.
declare @cust_id int = 2
exec s24240370.get_customer_preferences_json_ProfG_FP @cust_id --accept 1 required parameter customer id, json 
go

--5
--Customer Activity
--What customer didn’t place any orders yet?
--The report lists the information about the customers that registered but haven’t placed any orders yet: customer id, full name, day registered. 
select c.customer_id, s24240370.get_full_name_ProfG_FP(c.customer_id) as full_name, c.registration_date 
from s24240370.customers_ProfG_FP c
left join s24240370.orders_ProfG_FP o
on c.customer_id = o.customer_id
group by c.customer_id, s24240370.get_full_name_ProfG_FP(c.customer_id), c.registration_date
having count(o.order_id) = 0
order by c.customer_id

go

--6
--Customer Contact Information
--What are the contact details for each customer?
--The report compiles contact information for each customer: customer id, full name, preferred email address, all phone numbers.
select c.customer_id, s24240370.get_full_name_ProfG_FP(c.customer_id) as full_name, e.email_address as primary_email, p.phone_number as mobile_phone_number
from s24240370.customers_ProfG_FP c
left join s24240370.emails_ProfG_FP e
on c.customer_id = e.customer_id
left join s24240370.phone_numbers_ProfG_FP p
on c.customer_id = p.customer_id
where e.type = 'primary' and (p.type = 'mobile' or p.type is null)
order by c.customer_id
go

--7
--Frequent Cancellers
--What customers frequently cancel their orders?
--The report lists customers who frequently cancel their orders (higher than a specified threshold): order number, full name, the number of canceled orders within specified period of time.
exec s24240370.get_frequent_cancelers_ProfG_FP --accepts 1 paramer - number of days, default 100 
go

--8
--Customer Credit Card Count Report
--How many credit cards does a specified customer have associated with their account?
declare @cust_id int = 1
exec s24240370.get_customer_credit_card_count_ProfG_FP @cust_id --accept one required parameter - customer id 
go

--9
--Revenue by Category
--What is the total revenue generated by each product category?
--The report contains information on the total revenue generated by each product category: category names, total sales value, total number of units sold.
select c.category_id, c.name, sum(op.total_price) as total_revenue, sum(op.quantity) total_number_units_sold
from s24240370.categories_ProfG_FP c
left join s24240370.products_ProfG_FP p
on c.category_id = p.category_id
join s24240370.order_product_details_ProfG_FP op
on p.product_id = op.product_id
group by c.category_id, c.name
order by total_revenue desc

--10
--What are the current inventory levels of all products?
--The report indicates the current inventory levels of all products: product names, stock quantities, and reorder levels.
select p.product_id, p.product_name, c.name as category, p.stock as stock_quantity, p.reorder_level
from s24240370.categories_ProfG_FP c
join s24240370.products_ProfG_FP p
on c.category_id = p.category_id
order by p.product_id

--11
--Low Stock 
--Which products are low in stock and need to be reordered?
--The report shows products that are below their reorder level: product names and current stock quantities.
select p.product_id, p.product_name, c.name as category, p.stock as stock_quantity, p.reorder_level,
case
	when p.stock > p.reorder_level then 'good'
	else 'low'
end as status

from s24240370.categories_ProfG_FP c
join s24240370.products_ProfG_FP p
on c.category_id = p.category_id

where case
	when p.stock > p.reorder_level then 'good'
	else 'low'
end = 'low'
order by p.reorder_level

--12
--Order Status
--What is the status of a particular order?
--The report provides the status of a specified order: order id, name on the order, status, total price, number of products in the order, and comment. 
declare @order_id int = 20
exec s24240370.get_order_details_ProfG_FP  @order_id --accepts one required parameter order id, json 
go

--13
--Order Quantity 
--What is the number of orders placed within a specified period?
--The report presents the information on the number of orders placed within a specified period of days: the number of days and number of orders.
declare @num_of_days int = 100

select @num_of_days as period_days, count(1) as number_of_orders from s24240370.orders_ProfG_FP o
where o.order_date >= s24240370.get_date_specified_period_ProfG_FP(@num_of_days) and o.order_date <= getdate()
go


--14
--Payment Status
--What is the payment status of a particular order?
--The report includes the information on a particular order and its status: order id, total amount, card number, payment status, and payment date.
declare @order_id int = 1
exec s24240370.get_payment_status_ProfG_FP  @order_id --accept one required parameter - order id, json
go

--15
--Collector performance
--What is the number of orders collected by a picker?
--The report lists 5 top collectors and the number of orders completed by each of them: full name, specified period in days, number of orders. 

select top 5 p.picker_id, s24240370.get_full_name_ProfG_FP(p.picker_id) as full_name, count(o.order_id) as num_orders
from s24240370.pickers_ProfG_FP p
left join s24240370.pickers_orders_ProfG_FP po
on p.picker_id = po.picker_id
join s24240370.orders_ProfG_FP o
on po.order_id = o.order_id
group by p.picker_id, s24240370.get_full_name_ProfG_FP(p.picker_id)
order by num_orders desc

go
